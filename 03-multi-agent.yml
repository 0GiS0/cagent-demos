#!/usr/bin/env cagent run
version: "2"

agents:
  # El agente raíz debe llamarse 'root' para que cagent lo ejecute como punto de entrada.
  root:
    model: root_model
    description: Coordina la generación de títulos de YouTube en español.
    instruction: |
      Coordinador para generar títulos de YouTube. 
      Recibes una DESCRIPCIÓN DEL VIDEO del usuario.

      <WORKFLOW>
      1. Llamar a `investigador` con la descripción para buscar vídeos relacionados
      2. Llamar a `generador_titulo` con la descripción y resultados de investigación
      3. Entregar la propuesta de título al usuario
      </WORKFLOW>
    
      Usa la herramienta transfer_to_agent uno por vez. No generes títulos tú mismo.

      La respuesta final debe tener este formato EXACTO (sin explicaciones):

      TITULO RECOMENDADO: <titulo>

    sub_agents:
      - investigador
      - generador_titulo
    toolsets:
      - type: think

  investigador:
    model: investigator_model
    description: Busca vídeos relacionados en YouTube para obtener inspiración.
    instruction: |
      Recibe la descripción del video y busca vídeos relacionados en YouTube.
      
      Pasos:
      1. Extrae 2-3 palabras clave principales de la descripción
      2. Busca vídeos usando search_video con esas palabras clave
      3. Si en la búsqueda no hay resultados, intenta con las palabras clave individuales
      4. Si aún no hay resultados, di que no se han encontrado vídeos relacionados
      5. Si encontraste alguno con la palabra clave en el título, devuelve los títulos encontrados para inspiración.
      
      Formato de salida si hay resultados:
      PALABRAS CLAVE: [lista las palabras clave usadas]
      TÍTULOS ENCONTRADOS:
      - [título 1]
      - [título 2]
      - [etc.]

      Formato de salida si no hay resultados:
      PALABRAS CLAVE: [lista las palabras clave usadas]
      TÍTULOS ENCONTRADOS: []

    toolsets:
      - type: mcp
        command: "docker"
        args: [
          "run",
          "-i",
          "--rm",
          "-e", "YOUTUBE_API_KEY=${YOUTUBE_API_KEY}",
          "0gis0/youtube-mcp-server"
        ]


  generador_titulo:
    model: title_generator_model
    description: Genera 5 propuestas de títulos con emojis basados en la investigación.
    instruction: |
      Recibe:
      - DESCRIPCIÓN DEL VIDEO
      - PALABRAS CLAVE y TÍTULOS ENCONTRADOS del investigador

      o, si no hay títulos encontrados:
      PALABRAS CLAVE: [lista las palabras clave usadas]
      TÍTULOS ENCONTRADOS: []

      Si no te pasan títulos encontrados, invéntate los títulos a generar a partir de las palabras clave.

      Genera exactamente 5 propuestas de título en español que:
      - Incluyan las palabras clave principales
      - Se inspiren en los títulos encontrados
      - Tengan máximo 60 caracteres
      - Incluyan emojis relevantes
      - Sean atractivos y claros

      Formato de salida:
      1. [Título con emojis]
      2. [Título con emojis] 
      3. [Título con emojis]
      4. [Título con emojis]
      5. [Título con emojis]


# Usando OpenAI
# models:
#   root_model:
#     provider: openai
#     model: gpt-5
#   investigator_model:
#     provider: openai
#     model: gpt-4o
#   title_generator_model:
#     provider: openai
#     model: gpt-4o


# Usando Azure AI Foundry
models:
  root_model:
    provider: azure
    model: gpt-5-mini
    base_url: https://admin-mfuv34jk-eastus2.cognitiveservices.azure.com
    token_key: AZURE_AI_FOUNDRY_API_KEY
    provider_opts:
      azure_api_version: 2024-12-01-preview
  investigator_model:
    provider: azure
    model: gpt-5-mini
    base_url: https://admin-mfuv34jk-eastus2.cognitiveservices.azure.com
    token_key: AZURE_AI_FOUNDRY_API_KEY
    provider_opts:
      azure_api_version: 2024-12-01-preview
  title_generator_model:
    provider: azure
    model: gpt-5-mini
    base_url: https://admin-mfuv34jk-eastus2.cognitiveservices.azure.com
    token_key: AZURE_AI_FOUNDRY_API_KEY
    provider_opts:
      azure_api_version: 2024-12-01-preview


# Alternativa con GitHub Models
# models:
#   root_model:
#     provider: openai
#     model: openai/gpt-5
#     base_url: https://models.github.ai/inference
#   investigator_model:
#     provider: openai
#     model: openai/gpt-4o
#     base_url: https://models.github.ai/inference
#   title_generator_model:
#     provider: openai
#     model: openai/gpt-4o
#     base_url: https://models.github.ai/inference


# Alternativa con Ollama
# models:
#   root_model:
#     provider: openai
#     model: gpt-oss
#     base_url: http://localhost:11434/v1
#   investigator_model:
#     provider: openai
#     model: llama3.2
#     base_url: http://localhost:11434/v1
#   title_generator_model:
#     provider: openai
#     model: qwen2.5:7b-instruct
#     base_url: http://localhost:11434/v1